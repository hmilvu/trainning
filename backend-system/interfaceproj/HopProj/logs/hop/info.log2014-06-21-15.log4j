2014.06.21 15:24:11 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性
2014.06.21 15:24:12 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:14 [main] INFO  [org.apache.commons.httpclient.HttpMethodDirector] - I/O exception (java.net.ConnectException) caught when processing request: Connection refused: connect
2014.06.21 15:24:14 [main] INFO  [org.apache.commons.httpclient.HttpMethodDirector] - Retrying request
2014.06.21 15:24:15 [main] INFO  [org.apache.commons.httpclient.HttpMethodDirector] - I/O exception (java.net.ConnectException) caught when processing request: Connection refused: connect
2014.06.21 15:24:15 [main] INFO  [org.apache.commons.httpclient.HttpMethodDirector] - Retrying request
2014.06.21 15:24:16 [main] INFO  [org.apache.commons.httpclient.HttpMethodDirector] - I/O exception (java.net.ConnectException) caught when processing request: Connection refused: connect
2014.06.21 15:24:16 [main] INFO  [org.apache.commons.httpclient.HttpMethodDirector] - Retrying request
2014.06.21 15:24:17 [main] ERROR [com.xtrainning.hop.utils.HttpUtil] - Post Third Party Failed
java.net.ConnectException: Connection refused: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:249)
	at org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory.createSocket(DefaultProtocolSocketFactory.java:80)
	at org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory.createSocket(DefaultProtocolSocketFactory.java:122)
	at org.apache.commons.httpclient.HttpConnection.open(HttpConnection.java:707)
	at org.apache.commons.httpclient.HttpMethodDirector.executeWithRetry(HttpMethodDirector.java:387)
	at org.apache.commons.httpclient.HttpMethodDirector.executeMethod(HttpMethodDirector.java:171)
	at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:397)
	at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:323)
	at com.xtrainning.hop.utils.HttpUtil.postServer(HttpUtil.java:149)
	at com.xtrainning.hop.utils.HttpUtil.postServer(HttpUtil.java:121)
	at com.xtrainning.hop.service.mobile.MemberServiceTest.testGetMemberId2(MemberServiceTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:81)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
2014.06.21 15:24:17 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性
2014.06.21 15:24:17 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:18 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性
2014.06.21 15:24:18 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:19 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性
2014.06.21 15:24:19 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:20 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性
2014.06.21 15:24:20 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:21 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性
2014.06.21 15:24:21 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:48 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性
2014.06.21 15:24:48 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:49 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"memberId":2}
2014.06.21 15:24:50 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性
2014.06.21 15:24:50 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:50 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"2","message":"开发者权限不足","solution":"不足的ISV权限","subErrors":[{"code":"isv.invalid-permission","message":"权限不够、非法访问"}]}
2014.06.21 15:24:50 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性
2014.06.21 15:24:50 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:50 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"2","message":"开发者权限不足","solution":"不足的ISV权限","subErrors":[{"code":"isv.invalid-permission","message":"权限不够、非法访问"}]}
2014.06.21 15:24:50 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性
2014.06.21 15:24:50 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:50 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"21","message":"无效的sessionId参数","solution":"无效的会话,请获取合法的会话"}
2014.06.21 15:24:50 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性
2014.06.21 15:24:50 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:50 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"The phone number is already registered."}
2014.06.21 15:24:50 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性
2014.06.21 15:24:50 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:24:50 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"The phone number is already being used."}
2014.06.21 15:28:02 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性
2014.06.21 15:28:02 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:28:03 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"memberId":2}
2014.06.21 15:28:03 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性
2014.06.21 15:28:03 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:28:03 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"The phone number is already registered."}
2014.06.21 15:28:03 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性
2014.06.21 15:28:03 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:28:03 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"The phone number is already being used."}
2014.06.21 15:28:03 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性
2014.06.21 15:28:03 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:28:29 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"1","message":"服务不可用","solution":"服务目前无法使用，请保存好错误信息并和服务平台管理员联系","subErrors":[{"code":"isp.member-login-service-unavailable","message":"调用后端服务member.login抛异常:org.springframework.dao.InvalidDataAccessApiUsageException，服务不可用。\n异常信息:\njava.lang.RuntimeException: org.springframework.dao.InvalidDataAccessApiUsageException: object references an unsaved transient instance - save the transient instance before flushing: com.xtrainning.hop.entity.Member; nested exception is org.hibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing: com.xtrainning.hop.entity.Member\r\n\tat com.rop.impl.AnnotationServiceMethodAdapter.invokeServiceMethod(AnnotationServiceMethodAdapter.java:54)\r\n\tat com.rop.impl.AnnotationServletServiceRouter.doService(AnnotationServletServiceRouter.java:515)\r\n\tat com.rop.impl.AnnotationServletServiceRouter.access$600(AnnotationServletServiceRouter.java:40)\r\n\tat com.rop.impl.AnnotationServletServiceRouter$ServiceRunnable.run(AnnotationServletServiceRouter.java:349)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\r\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\n\tat java.lang.Thread.run(Thread.java:662)\r\nCaused by: org.springframework.dao.InvalidDataAccessApiUsageException: object references an unsaved transient instance - save the transient instance before flushing: com.xtrainning.hop.entity.Member; nested exception is org.hibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing: com.xtrainning.hop.entity.Member\r\n\tat org.springframework.orm.hibernate3.SessionFactoryUtils.convertHibernateAccessException(SessionFactoryUtils.java:671)\r\n\tat org.springframework.orm.hibernate3.HibernateAccessor.convertHibernateAccessException(HibernateAccessor.java:412)\r\n\tat org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:411)\r\n\tat org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)\r\n\tat org.springframework.orm.hibernate3.HibernateTemplate.flush(HibernateTemplate.java:881)\r\n\tat com.xtrainning.hop.dao.SysSessionDAO.save(SysSessionDAO.java:36)\r\n\tat com.xtrainning.hop.resolver.SysSessionResolver.buildMemberSession(SysSessionResolver.java:35)\r\n\tat com.xtrainning.hop.resolver.SysSessionResolver$$FastClassByCGLIB$$cfc4ef5.invoke(<generated>)\r\n\tat net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)\r\n\tat org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\r\n\tat org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)\r\n\tat com.xtrainning.hop.resolver.SysSessionResolver$$EnhancerByCGLIB$$970d6a5b.buildMemberSession(<generated>)\r\n\tat com.xtrainning.hop.service.mobile.MemberService.setupLoginSuccessResponse(MemberService.java:102)\r\n\tat com.xtrainning.hop.service.mobile.MemberService.login(MemberService.java:121)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat com.rop.impl.AnnotationServiceMethodAdapter.invokeServiceMethod(AnnotationServiceMethodAdapter.java:46)\r\n\t... 9 more\r\nCaused by: org.hibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing: com.xtrainning.hop.entity.Member\r\n\tat org.hibernate.engine.ForeignKeys.getEntityIdentifierIfNotUnsaved(ForeignKeys.java:242)\r\n\tat org.hibernate.type.EntityType.getIdentifier(EntityType.java:430)\r\n\tat org.hibernate.type.ManyToOneType.isDirty(ManyToOneType.java:265)\r\n\tat org.hibernate.type.TypeFactory.findDirty(TypeFactory.java:619)\r\n\tat org.hibernate.persister.entity.AbstractEntityPersister.findDirty(AbstractEntityPersister.java:3151)\r\n\tat org.hibernate.event.def.DefaultFlushEntityEventListener.dirtyCheck(DefaultFlushEntityEventListener.java:501)\r\n\tat org.hibernate.event.def.DefaultFlushEntityEventListener.isUpdateNecessary(DefaultFlushEntityEventListener.java:227)\r\n\tat org.hibernate.event.def.DefaultFlushEntityEventListener.onFlushEntity(DefaultFlushEntityEventListener.java:150)\r\n\tat org.hibernate.event.def.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:219)\r\n\tat org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:99)\r\n\tat org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:49)\r\n\tat org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1027)\r\n\tat org.springframework.orm.hibernate3.HibernateTemplate$28.doInHibernate(HibernateTemplate.java:883)\r\n\tat org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:406)\r\n\t... 30 more\r\n"}]}
2014.06.21 15:28:29 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性
2014.06.21 15:28:29 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:28:29 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"32","message":"缺少必选参数","solution":"请查看根据服务接口，添加必须的参数","subErrors":[{"code":"isv.missing-parameter:password","message":"缺少必要的参数password"},{"code":"isv.missing-parameter:phoneNumber","message":"缺少必要的参数phoneNumber"}]}
2014.06.21 15:28:29 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性
2014.06.21 15:28:29 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:28:29 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"21","message":"无效的sessionId参数","solution":"无效的会话,请获取合法的会话"}
2014.06.21 15:29:58 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性
2014.06.21 15:29:58 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:29:58 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"memberId":2}
2014.06.21 15:29:59 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性
2014.06.21 15:29:59 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:29:59 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"The phone number is already registered."}
2014.06.21 15:29:59 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性
2014.06.21 15:29:59 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:29:59 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"The phone number is already being used."}
2014.06.21 15:29:59 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性
2014.06.21 15:29:59 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:30:04 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"User name and password are incorrect."}
2014.06.21 15:30:04 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性
2014.06.21 15:30:04 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:30:17 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性
2014.06.21 15:30:17 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:32:03 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性
2014.06.21 15:32:03 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:32:04 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"memberId":2}
2014.06.21 15:32:05 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性
2014.06.21 15:32:05 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:32:05 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"The phone number is already registered."}
2014.06.21 15:32:05 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性
2014.06.21 15:32:05 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:32:05 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"The phone number is already being used."}
2014.06.21 15:32:05 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性
2014.06.21 15:32:05 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:32:12 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"User name and password are incorrect."}
2014.06.21 15:32:12 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性
2014.06.21 15:32:12 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:32:21 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":0,"msg":"success","sessionId":"E6C6811A-2653-46E4-9FB5-F64D39941421","memberId":4}
2014.06.21 15:32:21 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性
2014.06.21 15:32:21 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:32:21 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"21","message":"无效的sessionId参数","solution":"无效的会话,请获取合法的会话"}
2014.06.21 15:36:07 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性
2014.06.21 15:36:07 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:36:07 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"memberId":2}
2014.06.21 15:36:07 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性
2014.06.21 15:36:07 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetVcodeRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:36:07 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"The phone number is already registered."}
2014.06.21 15:36:07 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性
2014.06.21 15:36:07 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.SignUpRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:36:07 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":1,"msg":"The phone number is already being used."}
2014.06.21 15:36:07 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性
2014.06.21 15:36:07 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:36:15 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":0,"msg":"success","sessionId":"1E872D15-0263-4386-B80F-18F42663B15C","memberId":3}
2014.06.21 15:36:15 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性
2014.06.21 15:36:15 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.ThirdLoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:36:17 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"flag":0,"msg":"success","sessionId":"0E435239-56BF-4D83-8A12-EF78C123F481","memberId":4}
2014.06.21 15:36:17 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性
2014.06.21 15:36:17 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.21 15:36:17 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"21","message":"无效的sessionId参数","solution":"无效的会话,请获取合法的会话"}
