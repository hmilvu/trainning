2014.06.19 13:18:30 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性
2014.06.19 13:18:30 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.19 13:18:37 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"1","message":"服务不可用","solution":"服务目前无法使用，请保存好错误信息并和服务平台管理员联系","subErrors":[{"code":"isp.member-getMemberId-service-unavailable","message":"调用后端服务member.getMemberId抛异常:org.springframework.orm.hibernate3.HibernateQueryException，服务不可用。\n异常信息:\njava.lang.RuntimeException: org.springframework.orm.hibernate3.HibernateQueryException: Expected positional parameter count: 2, actual parameters: [1] [update Member set lastAccessTime = ? where id = ?]; nested exception is org.hibernate.QueryException: Expected positional parameter count: 2, actual parameters: [1] [update Member set lastAccessTime = ? where id = ?]\r\n\tat com.rop.impl.AnnotationServiceMethodAdapter.invokeServiceMethod(AnnotationServiceMethodAdapter.java:54)\r\n\tat com.rop.impl.AnnotationServletServiceRouter.doService(AnnotationServletServiceRouter.java:515)\r\n\tat com.rop.impl.AnnotationServletServiceRouter.access$600(AnnotationServletServiceRouter.java:40)\r\n\tat com.rop.impl.AnnotationServletServiceRouter$ServiceRunnable.run(AnnotationServletServiceRouter.java:349)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\r\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\n\tat java.lang.Thread.run(Thread.java:662)\r\nCaused by: org.springframework.orm.hibernate3.HibernateQueryException: Expected positional parameter count: 2, actual parameters: [1] [update Member set lastAccessTime = ? where id = ?]; nested exception is org.hibernate.QueryException: Expected positional parameter count: 2, actual parameters: [1] [update Member set lastAccessTime = ? where id = ?]\r\n\tat org.springframework.orm.hibernate3.SessionFactoryUtils.convertHibernateAccessException(SessionFactoryUtils.java:656)\r\n\tat org.springframework.orm.hibernate3.HibernateAccessor.convertHibernateAccessException(HibernateAccessor.java:412)\r\n\tat org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:411)\r\n\tat org.springframework.orm.hibernate3.HibernateTemplate.execute(HibernateTemplate.java:339)\r\n\tat com.xtrainning.hop.dao.MemberDAO.updateLastAccessTime(MemberDAO.java:55)\r\n\tat com.xtrainning.hop.resolver.MemberResolver.updateLastAccessTime(MemberResolver.java:56)\r\n\tat com.xtrainning.hop.resolver.MemberResolver$$FastClassByCGLIB$$93c58086.invoke(<generated>)\r\n\tat net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)\r\n\tat org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\r\n\tat org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)\r\n\tat com.xtrainning.hop.resolver.MemberResolver$$EnhancerByCGLIB$$97077f15.updateLastAccessTime(<generated>)\r\n\tat com.xtrainning.hop.service.mobile.MemberService.getMemberId(MemberService.java:30)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat com.rop.impl.AnnotationServiceMethodAdapter.invokeServiceMethod(AnnotationServiceMethodAdapter.java:46)\r\n\t... 9 more\r\nCaused by: org.hibernate.QueryException: Expected positional parameter count: 2, actual parameters: [1] [update Member set lastAccessTime = ? where id = ?]\r\n\tat org.hibernate.impl.AbstractQueryImpl.verifyParameters(AbstractQueryImpl.java:343)\r\n\tat org.hibernate.impl.AbstractQueryImpl.verifyParameters(AbstractQueryImpl.java:299)\r\n\tat org.hibernate.impl.QueryImpl.executeUpdate(QueryImpl.java:113)\r\n\tat com.xtrainning.hop.dao.MemberDAO$1.doInHibernate(MemberDAO.java:61)\r\n\tat com.xtrainning.hop.dao.MemberDAO$1.doInHibernate(MemberDAO.java:1)\r\n\tat org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:406)\r\n\t... 28 more\r\n"}]}
2014.06.19 13:18:37 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性
2014.06.19 13:18:37 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.19 13:18:37 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"2","message":"开发者权限不足","solution":"不足的ISV权限","subErrors":[{"code":"isv.invalid-permission","message":"权限不够、非法访问"}]}
2014.06.19 13:18:37 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性
2014.06.19 13:18:37 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.19 13:18:37 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"21","message":"无效的sessionId参数","solution":"无效的会话,请获取合法的会话"}
2014.06.19 13:20:31 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性
2014.06.19 13:20:31 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.19 13:20:32 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"memberId":1}
2014.06.19 13:20:32 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性
2014.06.19 13:20:32 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.19 13:20:32 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"2","message":"开发者权限不足","solution":"不足的ISV权限","subErrors":[{"code":"isv.invalid-permission","message":"权限不够、非法访问"}]}
2014.06.19 13:20:32 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性
2014.06.19 13:20:32 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.19 13:20:32 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"21","message":"无效的sessionId参数","solution":"无效的会话,请获取合法的会话"}
2014.06.19 13:20:52 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性
2014.06.19 13:20:52 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetMemberIdRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.19 13:20:55 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"memberId":2}
2014.06.19 13:20:56 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性
2014.06.19 13:20:56 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.LoginRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.19 13:20:56 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"2","message":"开发者权限不足","solution":"不足的ISV权限","subErrors":[{"code":"isv.invalid-permission","message":"权限不够、非法访问"}]}
2014.06.19 13:20:56 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性
2014.06.19 13:20:56 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetProfileRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.19 13:20:56 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"code":"21","message":"无效的sessionId参数","solution":"无效的会话,请获取合法的会话"}
2014.06.19 13:22:35 [main] DEBUG [com.rop.impl.DefaultRopContext] - 获取com.xtrainning.hop.request.mobile.GetNewsListRequest不需要签名的属性
2014.06.19 13:22:35 [main] DEBUG [com.rop.impl.DefaultRopContext] - com.xtrainning.hop.request.mobile.GetNewsListRequest不需要签名的属性:[sign, ropRequestContext]
2014.06.19 13:22:35 [main] DEBUG [com.rop.client.DefaultRopClient] - response:
{"newsList":[]}
